/**
 * Created by qr on 2015/12/15.
 */

//数组实例的find方法，用于找出[[[[第一个]]]]符合条件的数组成员。它的参数是一个回调函数，
// 所有数组成员依次执行该回调函数，直到找出第一个返回值为true的成员，
// 然后返回该成员。如果没有符合条件的成员，则返回undefined。

var arr = [  22,33,44,55 ];

var value = arr.find(function(value ){
   return value > 33;
});

console.log(value);
console.log("*****************************************************");









//数组实例的findIndex方法的用法与find方法非常类似，
// 返回第一个符合条件的数组成员的位置，如果所有成员都不符合条件，则返回-1。
var arr1 = [22,NaN];

console.log(arr1.findIndex(function(v){
   return Object.is(NaN,v);
}));
console.log("*****************************************************");







// copyWithin(position,start,end);


//数组实例的copyWithin方法，在当前数组内部，
// 将指定位置的成员复制到其他位置（会覆盖原有成员），
// 然后返回当前数组。也就是说，使用这个方法，会修改当前数组。
//target（必需）：从该位置开始替换数据。
//start（可选）：从该位置开始读取数据，默认为0。如果为负值，表示倒数。
//end（可选）：到该位置前停止读取数据，默认等于数组长度。如果为负值，表示倒数。

var arr2 = [1,2,3,4,5,6,7];
arr2.copyWithin(1,-5,7);//
console.log(arr2);
console.log("*****************************************************");







//fill方法使用给定值，填充一个数组;
//fill方法用于空数组的初始化非常方便。数组中已有的元素，会被全部抹去。
var arr3 = [1,2,3,4,5,6,7];

arr3.fill(10,2,5);//填充的数字   填充的起始位置  填充的结束位置

console.log(arr3);



console.log("*****************************************************");
var arr4 = new Array(9);
arr4.fill(10,10,5);//填充的数字   填充的起始位置  填充的结束位置

console.log(arr4);